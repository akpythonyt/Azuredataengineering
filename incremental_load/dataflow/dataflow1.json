{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "costfactsource",
						"type": "DatasetReference"
					},
					"name": "costfactsummary"
				},
				{
					"dataset": {
						"referenceName": "cost_center",
						"type": "DatasetReference"
					},
					"name": "costcenter"
				},
				{
					"dataset": {
						"referenceName": "costelement",
						"type": "DatasetReference"
					},
					"name": "costelement"
				},
				{
					"dataset": {
						"referenceName": "glaccountmaster2",
						"type": "DatasetReference"
					},
					"name": "glaccountmaster"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdataafterjoin",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Prop_0 as string,",
				"          ACTIVITY_ID as string,",
				"          AMT_CTRL_AREA as string,",
				"          AMT_FIXED_CTRL_AREA as string,",
				"          AMT_FIXVAR_CTRL_AREA as string,",
				"          AMT_OBJ as string,",
				"          AMT_TRX as string,",
				"          ACTUAL_VALUE_CO_CURR as string,",
				"          PLAN_VALUE_CO_CURR as string,",
				"          ACTUAL_VALUE_TXN_CURR as string,",
				"          PLAN_VALUE_TXN_CURR as string,",
				"          AMT_VAR_CTRL_AREA as string,",
				"          QTY as string,",
				"          QTY_FIXED as string,",
				"          DEB_CRED_IND as string,",
				"          BUS_AREA_ID as string,",
				"          CHART_OF_ACCT_ID as string,",
				"          CMPNY_CODE_ID as string,",
				"          COST_CNTR_ID as string,",
				"          COST_ELEM_ID as string,",
				"          CTRL_AREA_ID as string,",
				"          CTRL_KEY_SUB_NUMBER_ID as string,",
				"          CTRL_TRX_ID as string,",
				"          CURR_ID_CTRL_AREA as string,",
				"          CURR_ID_LOC as string,",
				"          CURR_ID_OBJ as string,",
				"          CURR_ID_TRX as string,",
				"          FISC_PERIOD as string,",
				"          FISC_YEAR as string,",
				"          FISC_YR_VARIANT_ID_CMPNY_CODE as string,",
				"          FISC_YR_VARIANT_ID_CTRL_AREA as string,",
				"          GL_ACCT_ID as string,",
				"          INTERNAL_ORDER_ID as string,",
				"          OBJ_CLASS_ID as string,",
				"          OBJ_ID as string,",
				"          OBJ_ID_ORIGINAL as string,",
				"          OBJ_ID_PARTNER as string,",
				"          OBJ_TYPE_ID as string,",
				"          PARTITION_YEAR as string,",
				"          PERIOD_BLOCK_CODE as string,",
				"          PROJ_ELEM_ID as string,",
				"          PROJ_ID as string,",
				"          RECORD_TYPE_ID as string,",
				"          TRADING_PARTNER_ID as string,",
				"          TRX_TYPE_ID as string,",
				"          UOM_ID as string,",
				"          VERSION_ID as string,",
				"          LOAD_DATE as string,",
				"          LOAD_TIME as string,",
				"          SOURCE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> costfactsummary",
				"source(output(",
				"          Prop_0 as string,",
				"          ALT_FUNCTN as string,",
				"          BUS_AREA_ID as string,",
				"          CITY as string,",
				"          CMPNY_CODE_ID as string,",
				"          CMPNY_CODE_NAME as string,",
				"          COST_CNTR_DESCR as string,",
				"          COST_CNTR_FULL_NAME as string,",
				"          COST_CNTR_ID as string,",
				"          COST_CNTR_ID_SUBSEQUENT as string,",
				"          COST_CNTR_NAME as string,",
				"          COST_CNTR_NAME_01 as string,",
				"          COST_CNTR_NAME_02 as string,",
				"          COST_CNTR_NAME_03 as string,",
				"          COST_CNTR_NAME_04 as string,",
				"          COUNTRY_ID as string,",
				"          COUNTRY_NAME as string,",
				"          CREATED_BY as string,",
				"          CREATE_DATE as string,",
				"          CTRL_AREA_DESCR as string,",
				"          CTRL_AREA_ID as string,",
				"          CURR_ID as string,",
				"          DEPARTMENT as string,",
				"          DISTRICT as string,",
				"          EQUITY_TYPE_CODE as string,",
				"          FAX as string,",
				"          FUNCTN_CODE as string,",
				"          LOAD_DATE as string,",
				"          LOAD_TIME as string,",
				"          PERSON_IN_CHARGE as string,",
				"          PHONE as string,",
				"          PROFIT_CNTR_DESCR as string,",
				"          PROFIT_CNTR_ID as string,",
				"          REGION_ID as string,",
				"          REGION_NAME as string,",
				"          STREET as string,",
				"          TYPE_CODE as string,",
				"          VALID_FROM_DATE as string,",
				"          VALID_TO_DATE as string,",
				"          ZIP as string,",
				"          SOURCE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> costcenter",
				"source(output(",
				"          CHART_OF_ACCT_ID as string,",
				"          COST_ELEM_DESCR as string,",
				"          COST_ELEM_FULL_NAME as string,",
				"          COST_ELEM_ID as string,",
				"          CREATE_DATE as string,",
				"          LOAD_DATE as string,",
				"          LOAD_TIME as string,",
				"          PAYMNT_RELEVNT_FLAG as string,",
				"          TAX_RELEVNT_FLAG as string,",
				"          SOURCE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> costelement",
				"source(output(",
				"          Prop_0 as string,",
				"          BAL_SHEET_ACCT_FLAG as string,",
				"          CHART_OF_ACCT_FULL_NAME as string,",
				"          CHART_OF_ACCT_ID as string,",
				"          CHART_OF_ACCT_NAME as string,",
				"          CREATED_BY as string,",
				"          CREATE_DATE as string,",
				"          GL_ACCT_FULL_NAME as string,",
				"          GL_ACCT_GRP as string,",
				"          GL_ACCT_ID as string,",
				"          GL_ACCT_MASTER_DESCR as string,",
				"          GRP_ACCT_NUM as string,",
				"          LOAD_DATE as string,",
				"          LOAD_TIME as string,",
				"          PL_STMNT_ACCT_TYPE as string,",
				"          SOURCE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> glaccountmaster",
				"costfactsummary, costelement join(costfactsummary@COST_ELEM_ID == costelement@COST_ELEM_ID",
				"     && costfactsummary@CHART_OF_ACCT_ID == costelement@CHART_OF_ACCT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, costcenter join(costfactsummary@COST_CNTR_ID == costcenter@COST_CNTR_ID",
				"     && costfactsummary@CTRL_AREA_ID == costcenter@CTRL_AREA_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, glaccountmaster join(costfactsummary@GL_ACCT_ID == glaccountmaster@GL_ACCT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {15727} as string,",
				"          {16} as string,",
				"          {7} as string,",
				"          {5178.96} as string,",
				"          {2} as string,",
				"          {3} as string,",
				"          {1} as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}